<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nadam.Global.Lib</name>
    </assembly>
    <members>
        <member name="M:Nadam.Global.Lib.DirectedGraph.IDirectedGraph`1.AddNode(`0)">
            <summary>
            Add a new node to the graph with no edge to and from it.
            </summary>
            <param name="nodeVal">The value of node</param>
            <returns></returns>
        </member>
        <member name="M:Nadam.Global.Lib.DirectedGraph.IDirectedGraph`1.ContainsNode(`0)">
            <summary>
            Check if the given value belongs to the graph or not. Gives back the id of the node if exist,
            returns -1 otherwise
            </summary>
            <param name="nodeValue">Value to look for in the graph</param>
            <returns>true if node found, false otherwise</returns>
        </member>
        <member name="M:Nadam.Global.Lib.DirectedGraph.IDirectedGraph`1.ContainsEdge(`0,`0)">
            <summary>
            Check if the given value belongs to the given node or not. Gives back the id of the node if exist
            </summary>
            <param name="nodeA">The parent, which childre are beeing checked</param>
            <param name="nodeB">The node which is beeing looked for</param>
            <returns>true if node found, false otherwise</returns>
        </member>
        <member name="M:Nadam.Global.Lib.DirectedGraph.IDirectedGraph`1.RemoveNode(`0)">
            <summary>
            Removes an existing node from the graph. Will remove all edge pointing to the removing node.
            </summary>
            <param name="nodeValue">the value of the node to remove</param>
            <returns>boolean about the reoval success</returns>
        </member>
        <member name="T:Nadam.Global.Lib.Graph.Graph`1">
            <summary>
            Base graph class, represents an undirected graph
            Nodes and undirected edges can added
            </summary>
            <typeparam name="NodeType"></typeparam>
        </member>
        <member name="T:Nadam.Global.Lib.ConsoleShell.CommandShellAttribute">
            <summary>
            Should go to a common lib (Nadam.Lib)
            </summary>
        </member>
        <member name="T:Nadam.Global.Lib.Extensions">
            <summary>
            This class contains other extension like forach, and some string extensions
            </summary>
            <summary>
            This class contains extension methods for Reflection
            </summary>
            <summary>
            This class contains extension methods for Filtering
            </summary>
        </member>
        <member name="M:Nadam.Global.Lib.Extensions.GetValueFor``1(``0,System.String)">
            <summary>
            Gets the value of a specific property for an object
            </summary>
            <typeparam name="T">T type parameter is the type of the object yout want to get value for</typeparam>
            <param name="src">src is the object it self (stands for source), type T</param>
            <param name="property">peroperty is the name of the property you want to get the value, type string</param>
            <returns></returns>
        </member>
        <member name="M:Nadam.Global.Lib.Extensions.SetValueFor``1(``0,System.String,System.Object)">
            <summary>
            Sets the value of a sepcific property for an object
            </summary>
            <typeparam name="T">T type parameter is the type of the object to set value</typeparam>
            <param name="src">src(source) is the opbject you want to set a property</param>
            <param name="property">name of the property</param>
            <param name="val">value of the property</param>
            <returns></returns>
        </member>
        <member name="M:Nadam.Global.Lib.Extensions.SetValueToNullFor``1(``0,System.String)">
            <summary>
            Set the given property to null
            </summary>
            <typeparam name="T">the type of the object</typeparam>
            <param name="src">the object that you want to set one if its properties to null</param>
            <param name="property">the name of the property</param>
            <returns></returns>
        </member>
        <member name="M:Nadam.Global.Lib.Extensions.SetValuesToNullFor``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Same as the SetValueToNullFor method, just this one takes a list of propeti name that will made null
            </summary>
            <typeparam name="T">check SetValueToNullFor method</typeparam>
            <param name="src">check SetValueToNullFor method</param>
            <param name="properties">check SetValueToNullFor method</param>
            <returns></returns>
        </member>
        <member name="M:Nadam.Global.Lib.Extensions.HasProperty``1(``0,System.String)">
            <summary>
            Check the given property if exist for the given object
            </summary>
            <typeparam name="T">the type of the objet</typeparam>
            <param name="src">the object it selt you want tocheck</param>
            <param name="property">name of the property to check</param>
            <returns></returns>
        </member>
        <member name="M:Nadam.Global.Lib.Extensions.MakeVirtualPropertiesNull(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Makes all the virtual properties null for the given object
            </summary>
            <param name="root"></param>
            <returns></returns>
        </member>
    </members>
</doc>
